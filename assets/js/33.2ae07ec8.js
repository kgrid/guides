(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{310:function(t,s,e){"use strict";e.r(s);var a=e(14),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"ko-service-openapi"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ko-service-openapi"}},[t._v("#")]),t._v(" KO Service OpenAPI")]),t._v(" "),s("p",[t._v("KO Service interfaces are described using the "),s("a",{attrs:{href:"https://spec.openapis.org/oas/v3.1.0",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenAPI"),s("OutboundLink")],1),t._v(" specification.  This specification defines the path(s) to the service, the request and response scheme and much more.  Here we will briefly describe the minimal information needed to describe a KO Service.  You can write OpenAPI definitions in YAML or JSON, our templates in KGrid CLI and our examples all use the YAML format, we found the format easier and more concise.")]),t._v(" "),s("h2",{attrs:{id:"structure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#structure"}},[t._v("#")]),t._v(" Structure")]),t._v(" "),s("p",[t._v("The following describes the basic structure of OpenAPI 3.0 definition. We will use the "),s("a",{attrs:{href:"https://kgrid-activator-demo.herokuapp.com/kos/js/simple/v1.0/service.yaml",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS Simple V1.0"),s("OutboundLink")],1),t._v(" OpenAPI 3.0 definition for this example.")]),t._v(" "),s("h3",{attrs:{id:"metadata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#metadata"}},[t._v("#")]),t._v(" Metadata")]),t._v(" "),s("p",[t._v("Define the version of the OpenAPI Specification and basic information about this API")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("openapi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3.0.2\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1.0'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello, world'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" An example of simple Knowledge Object\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("license")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" GNU General Public License v3 (GPL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("3)\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n      https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//tldrlegal.com/license/gnu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("general"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("public"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("license"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("v3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("(gpl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("3)"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#fulltext")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("contact")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" KGrid Team\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("email")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kgrid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("developers@umich.edu\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://kgrid.org'")]),t._v("\n")])])]),s("h3",{attrs:{id:"servers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#servers"}},[t._v("#")]),t._v(" Servers")]),t._v(" "),s("p",[t._v("The servers section specifies the API server and base URL. for KO Services we use the "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Archival_Resource_Key",target:"_blank",rel:"noopener noreferrer"}},[t._v("Archival Resource Key"),s("OutboundLink")],1),t._v(" (ark id) which is /naan/name.  Using the ark id ensures the paths are unique.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("servers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /js/simple\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Hello world\n")])])]),s("h3",{attrs:{id:"paths"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#paths"}},[t._v("#")]),t._v(" Paths")]),t._v(" "),s("p",[t._v("The paths section defines individual endpoints (paths) in your API.  Currently KO Service activation support the "),s("em",[t._v("POST")]),t._v(" HTTP method and GET using the resource adapter.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("/welcome")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" KO Endpoints\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Welcome.\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operationId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" welcome\n")])])]),s("h3",{attrs:{id:"request-body"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-body"}},[t._v("#")]),t._v(" Request Body")]),t._v(" "),s("p",[t._v("The requestBody keyword describes the body content and media type. KO services use json inputs.  The json format is defined in the "),s("em",[t._v("input")]),t._v(" scheme components section of the  definition.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requestBody")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inputs\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("application/json")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("schema")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("$ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#/components/schemas/input'")]),t._v("\n")])])]),s("p",[t._v("Here is the "),s("em",[t._v("input")]),t._v(" json definition with type and examples.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("components")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("schemas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("input")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" name\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("properties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("x-kgrid-label")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Please enter your name'")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("x-kgrid-unit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("example")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Bob\n")])])]),s("h3",{attrs:{id:"responses"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#responses"}},[t._v("#")]),t._v(" Responses")]),t._v(" "),s("p",[t._v("To response definition is categorized by status code.  The content defines the type and format via a scheme "),s("em",[t._v("output")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("responses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("'200'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" response\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("application/json")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("schema")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("$ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://demo.kgrid.org/schemas/openapischemas.yaml#/components/schemas/genericresponse'")]),t._v("\n")])])]),s("h2",{attrs:{id:"resources"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resources"}},[t._v("#")]),t._v(" Resources")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://oai.github.io/Documentation/specification-structure.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenAPI Basic Structure"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://openapi.tools/",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenAPI Tools"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);